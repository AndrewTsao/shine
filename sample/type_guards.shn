import enum, like, ge from "util.guards"
print "here"

opts = enum { "a", "b", "c" }

function foo(a is Number, b is opts = 'a')
   print a
end

function bar(o is like { x = Number, y = Number })
   print "x: %{o.x}, y: %{o.y}"
end

function baz(n is ge 0)
   print "positive or zero: %{n}"
end

foo 11, 'a'
foo 22, 'b'
foo 33, 'c'
foo 44

try
   foo 55, 'd'
catch e then
   print "caught: %{e}"
end

class Point
   self(x = 0, y = 0)
      self.x = x
      self.y = y
   end
end

p = Point()
bar(p)
try
   bar(42)
catch e then
   print "caught: %{e}"
end

baz(0)
baz(42)
try
   baz(-1)
catch e then
   print "caught: %{e}"
end


